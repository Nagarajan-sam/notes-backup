Q1: Write a shell script to find out the unique words in a file and also count the occurrence of each of these words.
 We can say that the file under consideration contains many lines, and each line has multiple words.
cat filee.txt
 cut --d : -f2| cut -c6 ,7,8 <<<"linux:cmd"
Using  cut the line by a specified byte position
cut  -b 6 file.txt
P
6
/
cut the line by the specified characters
cut -c 1,6 file.txt
np
a6
d/

2.How will you delete a file which has special characters in its file name?
echo enter a and b
read a b
c=expr $a + $b
echo $c


*****************************************************
Day2


1.Write a shell script to find out the unique words in a file and also count the occurrence of each of these words.
 We can say that the file under consideration contains many lines, and each line has multiple words

#!/bin/bash
unix is great os unix is opensource. unix is free os.
learn operating system.
unix linux which one you choose.
unix is easy to learn.unix is a multiuser os Learn unix is a powerful.

cat  filename   | tr '  '   '\n'   |  sort  |  uniq  -c (cat cmd is used in real time )
or
sed -e 's/ /\n/g' words.sh| sort | uniq -c
Sed -e: —> sed is a stream editor cmd used to edite at runtime but it will not affect the original file and 
(e) is used to add the script to the cmmd,\n is new line, it g for global to edit every word in the file.
 File name
Sort 
Uniq -c :- find the unique wrds and count the occurrence


2.How will you delete a file which has special characters in its file name? 
$ rm >file
Sample outputs:
rm: missing operand
Try `rm --help' for more information.
1. Put filenames in quotes$ rm -v ">file"removed `>file'The double quotes preserve the value of all characters enclosed,
 except for the dollar sign, the backticks and the backslash. You can also try single quotes as follows:
Tip #2: Try a backslash
$ rm -v ./-file
removed `./-file'

Tip #4: Try a — at the beginning of the filename
A — signals the end of options and disables further option processing by shell. 
Any arguments after the — are treated as filenames and arguments.
 An argument of – is equivalent to –. The syntax is:

$ rm -v -- -file$ rm -v -- --file$ rm -v -- "@#$%^&file"$ rmdir -v -- "--dirnameHere
"Tip #5: Remove file by an inode numberThe -i option to ls displays the index number (inode) of each file:ls -liUse find command as follows to delete the file if the file has inode number 4063242:$ find . -inum 4063242 -deleteOR$ find . -inum 4063242 -exec rm -i {} ;
Or
Genderly to find all special characters files

find . -type f -name '[^A-Za-z0-9]*' -exec rm -f {} \;









#!/bin/bash/
file_name=$1

if [ -L "$file_name" ]; then
          echo "$file_name is a symbolic link file"
elif [ -d "$file_name" ]; then
        echo "$file_name is a directory file"
elif [ -f "$file_name" ]; then
        echo "$file_name is a regular file"
elif [ -c "$file_name" ]; then
        echo "$file_name is a char file"
elif [ -s "$file_name" ]; then
        echo "$file_name is a socket file"
elif [ -b "$file_name" ]; then
        echo "$file_name is a block file"
elif [ -p "$file_name" ]; then
                echo "$file_name is a pipe file"
fi